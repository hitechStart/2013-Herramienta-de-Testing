/*
 * DialogImportPerson.java
 *   Dialogo para importar una persona hacia una seccion que requiera datos de personas
 * Parte de proyecto: SisCongresos
 * Author: Pedro Cardoso Rdz
 * Mail: cardp_2004@yahoo.com.mx
 * Place: Zacatecas Mexico
 * 
    Copyright Â© 2010 Pedro Cardoso Rodriguez

    SisCongresos is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or any 
    later version.

    SisCongresos is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with SisCongresos.  If not, see <http://www.gnu.org/licenses/>
 */

package Guis.Sistema;

import java.awt.Color;
import javax.swing.table.DefaultTableModel;

/**
 * @author  Pedro Cardoso Rodriguez
 */
public class DialogImportPerson extends javax.swing.JDialog {
    
    private String[] datos; // datos de la persona a importar
    
    /** Creates new form DialogImportPerson */
    public DialogImportPerson(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        Thread.setDefaultUncaughtExceptionHandler(new Logica.CatchUnhandledErrors((Ventana)parent));
        initComponents();
        btnClose.setColors(new Color(205,226,252),new Color(180,205,243),new Color(155,255,255));
        btnBuscar.setColors(new Color(223,232,254),new Color(108,155,254),new Color(155,255,255));
        datos=null; setLocationRelativeTo(null); setVisible(true);
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlAll = new javax.swing.JPanel();
        pnlDtsPrsn = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtNombre = new javax.swing.JTextField();
        txtAppat = new javax.swing.JTextField();
        txtApmat = new javax.swing.JTextField();
        btnBuscar = new com.guis.SimpleButton();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtbTabla = new javax.swing.JTable();
        lblResultados = new javax.swing.JLabel();
        pnlNorth = new javax.swing.JPanel();
        btnClose = new com.guis.SimpleButton();
        lblTitle = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setUndecorated(true);

        pnlAll.setBackground(new java.awt.Color(223, 232, 254));
        pnlAll.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(51, 102, 255), 3, true));
        pnlAll.setLayout(new java.awt.BorderLayout(5, 5));

        pnlDtsPrsn.setBackground(new java.awt.Color(223, 232, 254));

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 12));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Busqueda de persona a importar:");

        jLabel2.setText("Nombre:");

        jLabel3.setText("Apellido Paterno:");

        jLabel4.setText("Apellido Materno:");

        btnBuscar.setText("Buscar");
        btnBuscar.setToolTipText("<html>Busca personas con los datos actuales<<br>(La busqueda considerara todos los congresos y areas)</html>");
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });

        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("Datos de busqueda:");

        jtbTabla.setAutoCreateRowSorter(true);
        jtbTabla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Titulo", "Nombre", "Direccion", "Ciudad", "Estado"
            }
        ));
        jtbTabla.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        jtbTabla.setEnabled(false);
        jtbTabla.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtbTablaMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jtbTabla);

        lblResultados.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblResultados.setText("N personas encontradas. Haga click sobre una de ellas para importarla.");

        javax.swing.GroupLayout pnlDtsPrsnLayout = new javax.swing.GroupLayout(pnlDtsPrsn);
        pnlDtsPrsn.setLayout(pnlDtsPrsnLayout);
        pnlDtsPrsnLayout.setHorizontalGroup(
            pnlDtsPrsnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlDtsPrsnLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlDtsPrsnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 530, Short.MAX_VALUE)
                    .addGroup(pnlDtsPrsnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(pnlDtsPrsnLayout.createSequentialGroup()
                            .addGroup(pnlDtsPrsnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, pnlDtsPrsnLayout.createSequentialGroup()
                                    .addGap(13, 13, 13)
                                    .addComponent(jLabel2)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(pnlDtsPrsnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(txtAppat, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel3))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(pnlDtsPrsnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel4)
                                .addGroup(pnlDtsPrsnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(btnBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtApmat, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lblResultados, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        pnlDtsPrsnLayout.setVerticalGroup(
            pnlDtsPrsnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlDtsPrsnLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlDtsPrsnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(btnBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlDtsPrsnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtAppat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtApmat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlDtsPrsnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblResultados, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 291, Short.MAX_VALUE)
                .addContainerGap())
        );

        pnlAll.add(pnlDtsPrsn, java.awt.BorderLayout.CENTER);

        pnlNorth.setBackground(new java.awt.Color(223, 232, 254));

        btnClose.setText("X");
        btnClose.setFont(new java.awt.Font("Tahoma", 1, 11));
        btnClose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCloseActionPerformed(evt);
            }
        });
        btnClose.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                btnCloseKeyPressed(evt);
            }
        });

        lblTitle.setFont(new java.awt.Font("Tahoma", 1, 12));
        lblTitle.setForeground(new java.awt.Color(0, 0, 153));
        lblTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTitle.setText("Importar Persona");

        javax.swing.GroupLayout pnlNorthLayout = new javax.swing.GroupLayout(pnlNorth);
        pnlNorth.setLayout(pnlNorthLayout);
        pnlNorthLayout.setHorizontalGroup(
            pnlNorthLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlNorthLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblTitle, javax.swing.GroupLayout.DEFAULT_SIZE, 517, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnClose, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        pnlNorthLayout.setVerticalGroup(
            pnlNorthLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlNorthLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(btnClose, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(lblTitle))
        );

        pnlAll.add(pnlNorth, java.awt.BorderLayout.NORTH);

        getContentPane().add(pnlAll, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnCloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCloseActionPerformed
        dispose();
    }//GEN-LAST:event_btnCloseActionPerformed

    private void btnCloseKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btnCloseKeyPressed
        int key=evt.getKeyCode();
        if(key==java.awt.event.KeyEvent.VK_ESCAPE||key==java.awt.event.KeyEvent.VK_ENTER)
            dispose();
    }//GEN-LAST:event_btnCloseKeyPressed

    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed
        DefaultTableModel modelo;
        boolean auxb;
        String aux=txtNombre.getText().trim();
        String sen="select clvdts,Nombre,Appat as 'A Paterno',Apmat as 'A Materno'";
        sen+=",Dir as 'Direccion',Ciudad,Estado,Telcasa as 'Tel Casa',telofic as ";
        sen+="'Tel Oficina',telmovil as 'Tel Movil',correoe as 'Correo Electronico";
        sen+="',Titulo as 'Titulo Profesional' from dtspers where";
        if(aux.length()>0) sen+=" nombre like '%"+aux+"%'";
        aux=txtAppat.getText().trim();
        auxb=sen.endsWith("where");
        if(aux.length()>0) sen+=(auxb?"":" and ")+" Appat like '%"+aux+"%'";
        aux=txtApmat.getText().trim();
        auxb=sen.endsWith("where");
        if(aux.length()>0) sen+=(auxb?"":" and ")+" Apmat like '%"+aux+"%'";
        auxb=sen.endsWith("where");
        if(auxb){
            sen="<html>Error debe indicar al menos un parametro de busqueda</html>";
            ((Ventana)getParent()).message(sen,DialogMessages.ERROR_MESS);
            return;
        }
        sen+=" order by Nombre;";
        modelo=BaseDatos.ConsultasBD.consTipoTable(sen);
        if(modelo==null){
            sen="<html>Error al intentar realizar la busqueda</html>";
            ((Ventana)getParent()).message(sen,DialogMessages.ERROR_MESS);
        }
        datos=null;
        sen="<html><b>"+modelo.getRowCount()+"</b> personas encontradas.<br>Haga ";
        sen+="doble click sobre cualquiera de ellas para importarla.</html>";
        lblResultados.setText(sen);
        jtbTabla.setModel(modelo);
        ocultaColumna("clvdts");
        jtbTabla.getColumn("Nombre").setPreferredWidth(80);
        jtbTabla.getColumn("A Paterno").setPreferredWidth(80);
        jtbTabla.getColumn("A Materno").setPreferredWidth(80);
        jtbTabla.getColumn("Direccion").setPreferredWidth(140);
        jtbTabla.getColumn("Ciudad").setPreferredWidth(80);
        jtbTabla.getColumn("Estado").setPreferredWidth(80);
        jtbTabla.getColumn("Tel Casa").setPreferredWidth(85);
        jtbTabla.getColumn("Tel Oficina").setPreferredWidth(85);
        jtbTabla.getColumn("Tel Movil").setPreferredWidth(85);
        jtbTabla.getColumn("Titulo Profesional").setPreferredWidth(120);
        jtbTabla.getColumn("Correo Electronico").setPreferredWidth(120);
    }//GEN-LAST:event_btnBuscarActionPerformed

    private void ocultaColumna(String nomCol){
        jtbTabla.getColumn(nomCol).setPreferredWidth(0);
        jtbTabla.getColumn(nomCol).setMinWidth(0);
        jtbTabla.getColumn(nomCol).setMaxWidth(0);
        jtbTabla.getColumn(nomCol).setResizable(false);
    }
    
    private void jtbTablaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtbTablaMouseClicked
        int col=jtbTabla.columnAtPoint(evt.getPoint());
        int fila=jtbTabla.rowAtPoint(evt.getPoint());
        if(fila>-1 && col>-1){
            if(evt.getClickCount()==2){
                datos=new String[jtbTabla.getColumnCount()];
                for(int i=0;i<jtbTabla.getColumnCount();i++)
                    datos[i]=""+jtbTabla.getValueAt(fila,i);
                dispose();
            }
            else jtbTabla.setRowSelectionInterval(fila, fila);
        }
    }//GEN-LAST:event_jtbTablaMouseClicked
    
    /** Obtiene los datos de la persona seleccionada para importar
     * @return los datos de la persona seleccionada para importar o 
     *   null si ninguna persona fue seleccionada
     */
    public String[] getDatosImp(){
        return datos;
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.guis.SimpleButton btnBuscar;
    private com.guis.SimpleButton btnClose;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jtbTabla;
    private javax.swing.JLabel lblResultados;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JPanel pnlAll;
    private javax.swing.JPanel pnlDtsPrsn;
    private javax.swing.JPanel pnlNorth;
    private javax.swing.JTextField txtApmat;
    private javax.swing.JTextField txtAppat;
    private javax.swing.JTextField txtNombre;
    // End of variables declaration//GEN-END:variables
    
}
