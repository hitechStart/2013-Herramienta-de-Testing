/*
 * DtsGrls.java
 *   JPanel que contiene la tabla con los datos generales del congreso actual
 * Parte de proyecto: SisCongresos
 * Author: Pedro Cardoso Rdz
 * Mail: cardp_2004@yahoo.com.mx
 * Place: Zacatecas Mexico
 * 
    Copyright Â© 2010 Pedro Cardoso Rodriguez

    SisCongresos is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or any 
    later version.

    SisCongresos is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with SisCongresos.  If not, see <http://www.gnu.org/licenses/>
 */

package Guis.Sistema;

import java.awt.Color;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JPanel;
import javax.swing.SwingConstants;
import javax.swing.plaf.basic.BasicArrowButton;
import javax.swing.table.DefaultTableModel;

/**
 * @author  Pedro Cardoso Rodriguez
 */
public class DtsGrls extends JPanel implements ActionListener{
    
    private BasicArrowButton btnDisplay; 
    private int clave; // clave del congreso en la bd
    private String titCon; // titulo del congreso en la bd
    private String temaCon; // tema del congreso en la bd
    private String perCon; // periodo del congreso en la bd
    private ContDatos contenedor; // referencia al conttenedor superior
    private boolean hayCambios;
    private String error;
    
    /** Creates new form BeanForm */
    public DtsGrls(ContDatos contenedor) {
        initComponents();
        this.contenedor=contenedor;
        btnDisplay=new BasicArrowButton(SwingConstants.WEST);
        btnDisplay.addActionListener(this);
        btnDisplay.setToolTipText("Desplegar "+lblTitle.getText());
        btnDisplay.setDirection(SwingConstants.NORTH);
        pnlNorth.add(btnDisplay,java.awt.BorderLayout.EAST);
        btnGuardar.setColors(new Color(223,232,254),new Color(108,155,254),new Color(155,255,255));
        btnEliminar.setColors(new Color(223,232,254),new Color(108,155,254),new Color(155,255,255));
        clave=0; titCon="Nuevo registro"; hayCambios=false;
        temaCon=null; perCon=null;
        escuchaCambios();
    }
    
    private void escuchaCambios(){
        DetectorCambios dc=new DetectorCambios();
        txtTitle.getDocument().addDocumentListener(dc);
        txtTema.getDocument().addDocumentListener(dc);
        txtSede.getDocument().addDocumentListener(dc);
        txtFechaIni.getDocument().addDocumentListener(dc);
        txtFechaFin.getDocument().addDocumentListener(dc);
    }
    
    public void setTitle(String tit, String contentReference){
        lblTitle.setText(tit);
        btnDisplay.setToolTipText("Desplegar "+tit);
        lblTitle.setToolTipText(contentReference);
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlNorth = new javax.swing.JPanel();
        lblTitle = new javax.swing.JLabel();
        pnlContainer = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtTitle = new javax.swing.JTextField();
        txtTema = new javax.swing.JTextField();
        txtSede = new javax.swing.JTextField();
        txtFechaIni = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtFechaFin = new javax.swing.JTextField();
        btnGuardar = new com.guis.SimpleButton();
        btnEliminar = new com.guis.SimpleButton();

        setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        setLayout(new java.awt.BorderLayout());

        pnlNorth.setLayout(new java.awt.BorderLayout());

        lblTitle.setText("Title");
        pnlNorth.add(lblTitle, java.awt.BorderLayout.CENTER);

        add(pnlNorth, java.awt.BorderLayout.NORTH);

        jLabel1.setText("Titulo:");

        jLabel2.setText("Tema:");

        jLabel3.setText("Sede:");

        jLabel4.setText("Fechas  Inicial:");

        jLabel5.setText("Final:");

        btnGuardar.setText("Guardar datos");
        btnGuardar.setToolTipText("Guardar datos generales");
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });

        btnEliminar.setText("Eliminar registro");
        btnEliminar.setToolTipText("Elimiar todo el registro");
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlContainerLayout = new javax.swing.GroupLayout(pnlContainer);
        pnlContainer.setLayout(pnlContainerLayout);
        pnlContainerLayout.setHorizontalGroup(
            pnlContainerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlContainerLayout.createSequentialGroup()
                .addGroup(pnlContainerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(pnlContainerLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(pnlContainerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pnlContainerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtSede, javax.swing.GroupLayout.PREFERRED_SIZE, 500, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtTema, javax.swing.GroupLayout.PREFERRED_SIZE, 500, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 500, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(pnlContainerLayout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtFechaIni, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtFechaFin, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnGuardar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnlContainerLayout.setVerticalGroup(
            pnlContainerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlContainerLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlContainerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtTitle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlContainerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtTema, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlContainerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtSede, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlContainerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtFechaIni, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnGuardar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(txtFechaFin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(17, Short.MAX_VALUE))
        );

        add(pnlContainer, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents

    /** Guarda los cambios realizados en los datos 
     * @return true si se pudieron guardar lo cambios false en caso contrario
     */
    public boolean guardaCambios(){
        String[] datos=new String[5];
        String sen="";
        boolean bandera;
        if(!sonDatosValidos()) return false;
        datos[0]=txtTitle.getText();
        datos[1]=txtTema.getText();
        datos[2]=txtSede.getText();
        datos[3]=Logica.OprsDts.transformatFcha(txtFechaIni.getText());
        datos[4]=Logica.OprsDts.transformatFcha(txtFechaFin.getText());
        if(clave==0)
            bandera=BaseDatos.InsUpdBD.nuevoCongreso(datos);
        else{
            sen="update congresos set titcon='"+datos[0]+"', temacon='"+datos[1]+"', ";
            sen+="sede='"+datos[2]+"', FechaIni='"+datos[3]+"', ";
            sen+="FechaFin='"+datos[4]+"' where clvcon="+clave+";";
            bandera=BaseDatos.InsUpdBD.actualiza(sen);
        }
        if(!bandera){
            sen="<html>Error al intertar realizar la accion:<br>"+BaseDatos.InsUpdBD.obtenError()+"</html>";
            ((Ventana)getTopLevelAncestor()).message(sen,DialogMessages.ERROR_MESS);
            return false;
        }
        else{
            if(clave==0){
                clave=BaseDatos.InsUpdBD.obtenClave();
                contenedor.setClave(clave);
            }
            titCon=datos[0]; temaCon=datos[1]; 
            perCon=txtFechaIni.getText()+" : "+txtFechaFin.getText();
            sen="<html>Accion realizada<br>Se guardaron los datos generales</html>";
            ((Ventana)getTopLevelAncestor()).message(sen,DialogMessages.INF_MESS);
            ((Ventana)getTopLevelAncestor()).recargaListaCons();
            hayCambios=false; return true;
        }
    }
    
    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed
        guardaCambios();
    }//GEN-LAST:event_btnGuardarActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        contenedor.eliminaCongreso();
    }//GEN-LAST:event_btnEliminarActionPerformed
   
    /** Revisa si todos los datos son validos
     * @return true si todos los datos son validos false en caso contrario
     */
    private boolean sonDatosValidos(){
        String mens=null;
        int aux=txtTitle.getText().length();
        if(aux<1||aux>125)
            mens="<html>Datos generales<br>Error en dato <b>Titulo</b>:<br>Numero de caracteres invalido</html>";
        aux=txtTema.getText().length();
        if(aux<1||aux>125)
            mens="<html>Datos generales<br>Error en dato <b>Tema</b>:<br>Numero de caracteres invalido</html>";
        aux=txtSede.getText().length();
        if(aux<1||aux>125)
            mens="<html>Datos generales<br>Error en dato <b>Sede</b>:<br>Numero de caracteres invalido</html>";
        if(!valFecha(txtFechaIni.getText()))
            mens="<html>Datos generales<br>Error en dato <b>Fecha inicial</b>:<br>Formato incorrecto (DD-MM-AAAA)</html>";
        if(!valFecha(txtFechaFin.getText()))
            mens="<html>Datos generales<br>Error en dato <b>Fecha final</b>:<br>Formato incorrecto (DD-MM-AAAA)</html>";
        if(mens!=null){
            ((Ventana)getTopLevelAncestor()).message(mens,DialogMessages.ERROR_MESS);
            return false;
        }
        return true;
    }
    
    /** Valida una cadena que sea una fecha con el formato DD-MM-AAAA
     * @param fcha la cadena a validar
     * @return true si la cadena es valida false en caso contrario
     */
    private boolean valFecha(String fcha){
        Pattern ptrFecha  = Pattern.compile("[0-9]{2}-[0-9]{2}-[0-9]{4}");
        Matcher matcher = ptrFecha.matcher(fcha);
        return matcher.matches();
    }
    
    public void setColor(Color back,Color titleBar,Color body,Color borderColor,Color btnVerColor,Color toolTip){
        setBackground(back);
        pnlNorth.setBackground(titleBar);
        pnlContainer.setBackground(body);
        btnDisplay.setBackground(btnVerColor);
        setBorder(javax.swing.BorderFactory.createTitledBorder(null, "", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 11),borderColor));
        this.createToolTip().setBackground(toolTip);
        btnDisplay.createToolTip().setBackground(toolTip);
    }
  
    /** Carga los datos
     * @return true si los datos se cargaron correctamente false en caso contrario
     */
    public boolean cargaDatos(int clave){
        DefaultTableModel tabla=BaseDatos.ConsultasBD.consTipoTable("select * from congresos where clvcon="+clave);
        if(tabla==null){
            error=BaseDatos.ConsultasBD.getError();
            return false;
        }
        txtTitle.setText(""+tabla.getValueAt(0,1));
        titCon=txtTitle.getText();
        txtTema.setText(""+tabla.getValueAt(0,2));
        temaCon=txtTema.getText();
        txtSede.setText(""+tabla.getValueAt(0,3));
        txtFechaIni.setText(""+tabla.getValueAt(0,4));
        txtFechaFin.setText(""+tabla.getValueAt(0,5));
        perCon=txtFechaIni.getText()+" : "+txtFechaFin.getText();
        this.clave=clave; hayCambios=false;
        return true;
    }
    
    /** Obtiene la descripcion del ultimo error ocurrido
     * @return
     */
    public String getError(){ return error; }
    
    /** Obtiene el titulo del congreso
     * @return el titulo del congreso
     */
    public String getTitCon(){ return titCon; }

    /** Obtiene el tema del congreso
     * @return el tema del congreso
     */
    public String getTemaCon(){ return temaCon; }
   
    /** Obtiene el periodo del congreso
     * @return el periodo del congreso
     */
    public String getPerCon(){ return perCon; }
    
    /** Obtiene si hay cambios en los datos sin guardar
     * @return true si hay cambios en los datos sin guardar false en caso contrario
     */
    public boolean hayCambios(){
        return hayCambios;
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.guis.SimpleButton btnEliminar;
    private com.guis.SimpleButton btnGuardar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JPanel pnlContainer;
    private javax.swing.JPanel pnlNorth;
    private javax.swing.JTextField txtFechaFin;
    private javax.swing.JTextField txtFechaIni;
    private javax.swing.JTextField txtSede;
    private javax.swing.JTextField txtTema;
    private javax.swing.JTextField txtTitle;
    // End of variables declaration//GEN-END:variables

    public void actionPerformed(ActionEvent e) {
        if(btnDisplay.getDirection()==SwingConstants.SOUTH){
            pnlContainer.setVisible(true);
            btnDisplay.setDirection(SwingConstants.NORTH);
        }
        else{
            pnlContainer.setVisible(false);
            btnDisplay.setDirection(SwingConstants.SOUTH);
        }
        this.getTopLevelAncestor().validate();
    }
    
    private class DetectorCambios implements javax.swing.event.DocumentListener{
        public DetectorCambios(){}
        public void insertUpdate(javax.swing.event.DocumentEvent e){ hayCambios=true; }
        public void removeUpdate(javax.swing.event.DocumentEvent e){ hayCambios=true; }
        public void changedUpdate(javax.swing.event.DocumentEvent e){}
    }
}
